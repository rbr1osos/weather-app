(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"*{\n    box-sizing: border-box;\n}\n\nbody{\n    height:100vh;\n    width:100vw;\n    margin:0;\n    display:flex;\n    justify-content: center;\n    align-items: center;\n}\n.container{\n    display:flex;\n    flex-direction: column;\n    width:800px;\n    gap:16px;\n}\n.header{\n    text-align: center;\n}\n.search-container{\n    display:flex;\n}\n#search{\n    width:800px;\n}\n\n.content{\n    width:800;\n    max-height:1500px;\n    display:grid;\n    grid-template:114px 1fr / 1fr 1fr;\n    grid-column-gap:8px;\n    grid-row-gap:8px;\n}\n.hourly-title{\n    color:red;\n}\n\n.hourly-content-container{\n    display:flex;\n    gap:16px;\n}\n\n.hourly-container{\n    display:flex;\n    gap:16px;\n    flex-direction: column;\n    overflow-x:scroll;\n    border:1px solid black;\n    grid-area: 1/1/2/3;\n    border-radius: 8px;\n}\n.left-container{\n    grid-area: 2/1/3/2;\n    background-color: coral;\n}\n.right-container{\n    grid-area: 2/2/3/3;\n    background-color: white;\n    display:flex;\n    gap:6px;\n    flex-direction: column;\n    \n}\n\n.small-container{\n    grid-column-gap:6px;\n    grid-row-gap:6px;\n}\n\n.UV-container, \n.wind-container,\n.humidity-container,\n.chance-container,\n.sunrise-container,\n.sunset-container,\n.pressure-container,\n.visibility-container{\n    display:flex;\n    flex:1;\n    flex-direction: column;\n    padding:8px;\n    border:1px solid orange;\n    gap:4px;\n    font-size:14px;\n}\n\n.UV-container h3,\n.wind-container h3,\n.humidity-container h3,\n.chance-container h3,\n.sunrise-container h3,\n.sunset-container h3,\n.pressure-container h3,\n.visibility-container h3\n{\n    margin:0;\n    font-size: 18px;\n}\n\n.UV-container p,\n.wind-container p,\n.humidity-container p,\n.chance-container p,\n.sunrise-container p,\n.sunset-container p,\n.pressure-container p,\n.visibility-container p{\n    margin:0;\n\n}\n.UV-container h3, .wind-container h3{\n    font-size:20px;\n}\n\n.small-container{\n    display:grid;\n    grid-template:1fr 1fr / 1fr 1fr;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,sBAAsB;AAC1B;;AAEA;IACI,YAAY;IACZ,WAAW;IACX,QAAQ;IACR,YAAY;IACZ,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,YAAY;IACZ,sBAAsB;IACtB,WAAW;IACX,QAAQ;AACZ;AACA;IACI,kBAAkB;AACtB;AACA;IACI,YAAY;AAChB;AACA;IACI,WAAW;AACf;;AAEA;IACI,SAAS;IACT,iBAAiB;IACjB,YAAY;IACZ,iCAAiC;IACjC,mBAAmB;IACnB,gBAAgB;AACpB;AACA;IACI,SAAS;AACb;;AAEA;IACI,YAAY;IACZ,QAAQ;AACZ;;AAEA;IACI,YAAY;IACZ,QAAQ;IACR,sBAAsB;IACtB,iBAAiB;IACjB,sBAAsB;IACtB,kBAAkB;IAClB,kBAAkB;AACtB;AACA;IACI,kBAAkB;IAClB,uBAAuB;AAC3B;AACA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,YAAY;IACZ,OAAO;IACP,sBAAsB;;AAE1B;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;;;;;;;;IAQI,YAAY;IACZ,MAAM;IACN,sBAAsB;IACtB,WAAW;IACX,uBAAuB;IACvB,OAAO;IACP,cAAc;AAClB;;AAEA;;;;;;;;;IASI,QAAQ;IACR,eAAe;AACnB;;AAEA;;;;;;;;IAQI,QAAQ;;AAEZ;AACA;IACI,cAAc;AAClB;;AAEA;IACI,YAAY;IACZ,+BAA+B;AACnC",sourcesContent:["*{\n    box-sizing: border-box;\n}\n\nbody{\n    height:100vh;\n    width:100vw;\n    margin:0;\n    display:flex;\n    justify-content: center;\n    align-items: center;\n}\n.container{\n    display:flex;\n    flex-direction: column;\n    width:800px;\n    gap:16px;\n}\n.header{\n    text-align: center;\n}\n.search-container{\n    display:flex;\n}\n#search{\n    width:800px;\n}\n\n.content{\n    width:800;\n    max-height:1500px;\n    display:grid;\n    grid-template:114px 1fr / 1fr 1fr;\n    grid-column-gap:8px;\n    grid-row-gap:8px;\n}\n.hourly-title{\n    color:red;\n}\n\n.hourly-content-container{\n    display:flex;\n    gap:16px;\n}\n\n.hourly-container{\n    display:flex;\n    gap:16px;\n    flex-direction: column;\n    overflow-x:scroll;\n    border:1px solid black;\n    grid-area: 1/1/2/3;\n    border-radius: 8px;\n}\n.left-container{\n    grid-area: 2/1/3/2;\n    background-color: coral;\n}\n.right-container{\n    grid-area: 2/2/3/3;\n    background-color: white;\n    display:flex;\n    gap:6px;\n    flex-direction: column;\n    \n}\n\n.small-container{\n    grid-column-gap:6px;\n    grid-row-gap:6px;\n}\n\n.UV-container, \n.wind-container,\n.humidity-container,\n.chance-container,\n.sunrise-container,\n.sunset-container,\n.pressure-container,\n.visibility-container{\n    display:flex;\n    flex:1;\n    flex-direction: column;\n    padding:8px;\n    border:1px solid orange;\n    gap:4px;\n    font-size:14px;\n}\n\n.UV-container h3,\n.wind-container h3,\n.humidity-container h3,\n.chance-container h3,\n.sunrise-container h3,\n.sunset-container h3,\n.pressure-container h3,\n.visibility-container h3\n{\n    margin:0;\n    font-size: 18px;\n}\n\n.UV-container p,\n.wind-container p,\n.humidity-container p,\n.chance-container p,\n.sunrise-container p,\n.sunset-container p,\n.pressure-container p,\n.visibility-container p{\n    margin:0;\n\n}\n.UV-container h3, .wind-container h3{\n    font-size:20px;\n}\n\n.small-container{\n    display:grid;\n    grid-template:1fr 1fr / 1fr 1fr;\n}"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);r&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],c=0;c<n.length;c++){var s=n[c],A=r.base?s[0]+r.base:s[0],d=i[A]||0,l="".concat(A," ").concat(d);i[A]=d+1;var u=t(l),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=o(p,r);r.byIndex=c,e.splice(c,0,{identifier:l,updater:f,references:1})}a.push(l)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);e[c].references--}for(var s=r(n,o),A=0;A<i.length;A++){var d=t(i[A]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),c=t(565),s=t.n(c),A=t(216),d=t.n(A),l=t(589),u=t.n(l),p=t(28),f={};function h(n){const e=document.querySelector(".hourly-content-container"),t=document.createElement("div");t.classList.add("hour-container");const r=document.createElement("p");r.classList.add("hour-time"),r.innerHTML=function(n){const e=(new Date).getHours(),t=new Date(n).getHours();return 0==t-e?"now":t<12?0===t?"12am":t+"am":12===t?"12pm":t-12+"pm"}(n.time);const o=document.createElement("p");o.classList.add("hour-temp"),o.innerHTML=n.temp_f+"Â°",t.appendChild(r),t.appendChild(o),e.appendChild(t)}f.styleTagTransform=u(),f.setAttributes=s(),f.insert=a().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=d(),e()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;const m=document.querySelector(".title"),y=document.querySelector(".temp"),g=document.querySelector(".weather-type"),x=(document.querySelector(".feel-like"),document.querySelector(".search-button")),C=document.getElementById("search"),v=document.querySelector(".UV"),I=document.querySelector(".wind"),B=document.querySelector(".humidity"),b=document.querySelector(".chance"),w=document.querySelector(".sunrise"),S=document.querySelector(".sunset"),k=(document.querySelector(".pressure"),document.querySelector(".visibility"));async function E(n){const e=await fetch("https://api.weatherapi.com/v1/current.json?key=8c3a53840fda484d95933559232303&q="+n,{mode:"cors"}),t=await e.json(),r=await fetch("https://api.weatherapi.com/v1/forecast.json?key=8c3a53840fda484d95933559232303&q="+n,{mode:"cors"});!function(n,e){console.log(e.forecast.forecastday[0]);const t=e.forecast.forecastday[0].hour;for(let n=0;n<t.length;n++)h(t[n]);m.innerHTML=n.location.name,y.innerHTML=n.current.temp_f,g.innerHTML="clear sky",v.innerHTML=e.forecast.forecastday[0].day.uv,I.innerHTML=e.forecast.forecastday[0].day.maxwind_mph,B.innerHTML=e.forecast.forecastday[0].day.avghumidity,b.innerHTML=e.forecast.forecastday[0].day.daily_chance_of_rain+"%",w.innerHTML=e.forecast.forecastday[0].astro.sunrise,S.innerHTML=e.forecast.forecastday[0].astro.sunset,k.innerHTML=e.forecast.forecastday[0].day.avgvis_km+"km"}(t,await r.json())}E("San Francisco"),x.addEventListener("click",(()=>{E(C.value)})),C.addEventListener("input",(()=>{E(C.value)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,